package org.koushik.hibernate;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.classic.Session;
import org.koushik.hibernate.dto.Account;
import org.koushik.hibernate.dto.Address;
import org.koushik.hibernate.dto.Book;
import org.koushik.hibernate.dto.UserDetails;
import org.koushik.hibernate.dto.Vehicle;

public class HibernateTest {

	public static void main(String[] args) {
		UserDetails userDetails = new UserDetails();
		userDetails.setUserName("First user");
		userDetails.setJoinDate(new Date());
		userDetails.setDescription("Description is here....");
	
		//One to one
		Vehicle vehicle = new Vehicle();
		vehicle.setVehicleName("Car");
		
		userDetails.setVehicle(vehicle);
		
		//One to many
		Account account1 = new Account();
		account1.setAccountName("koushik");
		
		Account account2 = new Account();
		account2.setAccountName("koushik123");
		
		Account account3 = new Account();
		account3.setAccountName("koushik345");
		
		userDetails.getAccount().add(account1);
		userDetails.getAccount().add(account2);
		userDetails.getAccount().add(account3);
		
		//Many to one
		account1.setUser(userDetails);
		account2.setUser(userDetails);
		account3.setUser(userDetails);
		
		
		Book book1 = new Book();
		book1.setBookName("Java");
		Book book2 = new Book();
		book2.setBookName(". NET");
		
		userDetails.getBook().add(book1);
		userDetails.getBook().add(book2);
		
		/*Address homeAddr = new Address();
		homeAddr.setStreet("Home Street 111");
		homeAddr.setCity("bangalore");
		homeAddr.setState("KA");
		homeAddr.setPin("1111");
		
		userDetails.setHomeAddress(homeAddr);
		
		Address officeAddr = new Address();
		officeAddr.setStreet("Office Street 111");
		officeAddr.setCity("Delhi");
		officeAddr.setState("DL");
		officeAddr.setPin("2222");
		
		userDetails.setOfficeAddress(officeAddr);
		
		Address addr1 = new Address();
		addr1.setStreet("1111");
		addr1.setCity("ban");
		addr1.setState("KA");
		addr1.setPin("1111");
		
		Address addr2 = new Address();
		addr2.setStreet("2222");
		addr2.setCity("ckm");
		addr2.setState("KA");
		addr2.setPin("2222");
		
		userDetails.getListOfAddresses().add(addr1);
		userDetails.getListOfAddresses().add(addr2);*/

		
		
		/*
		 * 1. Create session factory
		 * 2. Create a session from session factory
		 * 3. Use the session to save model object
		 */
		SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
		Session session = sessionFactory.openSession();
		session.beginTransaction();
		
		session.save(userDetails);
		
		session.save(vehicle);
		
		session.save(account1);
		session.save(account2);
		session.save(account3);
		
		//need not do session.save if mentioned as cascade instead need to give session.persist(user)
		//session.save(book1);
		//session.save(book2);
		
		session.getTransaction().commit();
		session.close();
		
		/*userDetails = null;
		
		//Retrieving from db using hibernate
		 
		session = sessionFactory.openSession();
		session.beginTransaction();
		
		//have to pass primary key as second argument for session.get
		userDetails = (UserDetails) session.get(UserDetails.class, 1);
		
		System.out.println("User name : "+userDetails.getUserName()
							+" Description : "+userDetails.getDescription());
		
		//Accessing the collection - list of addresses - proxy object gets called
		System.out.println(userDetails.getListOfAddresses().size());*/
		
	}
}
